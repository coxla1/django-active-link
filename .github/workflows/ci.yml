name: CI

on:
  push:
    branches: [ master, fix_pypi_release ]
  pull_request:
    branches:
      - '**'

jobs:
  run_unittest_tests:
    name: Unittest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        tox-env:
          - "django-40"
          - "django-41"
          - "django-42"
          - "django-50"

        exclude:
          - python-version: "3.11"
            tox-env: "django-40"
          - python-version: "3.12"
            tox-env: "django-40"
          - python-version: "3.12"
            tox-env: "django-41"
          - python-version: "3.8"
            tox-env: "django-50"
          - python-version: "3.9"
            tox-env: "django-50"
  
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --only test
      
      - name: Test with tox
        run: poetry run tox -e py${{ matrix.python-version }}-${{ matrix.tox-env }}
      
      - name: Report to codecov
        if: success()
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: TOX_ENV

  pypi-publish:
    name: Upload release to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: run_unittest_tests

    environment:
      name: pypi
      url: https://pypi.org/p/django-active-link
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
          poetry build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1